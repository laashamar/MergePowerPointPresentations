name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop, tests, "copilot/**" ]
  pull_request:
    branches: [ main, develop, tests ]

env:
  # Disable Ubuntu ESM to prevent esm.ubuntu.com access
  DEBIAN_FRONTEND: noninteractive
  NO_APT_SOURCES_UPDATE: 1

jobs:
  lint:
    name: Lint Code
    runs-on: windows-latest  # Use Windows to avoid apt-get entirely

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip --no-warn-script-location
        pip install ruff --no-warn-script-location

    - name: Check code with ruff
      run: ruff check .

    - name: Check code formatting with ruff
      run: ruff format --check

  test:
    name: Run Tests
    runs-on: windows-latest  # Use Windows to avoid apt-get entirely
    needs: lint

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip --no-warn-script-location
        pip install pytest pytest-cov pytest-mock --no-warn-script-location
        pip install -r requirements.txt

    - name: Run unit tests
      run: pytest tests/ -v --tb=short --cov=. --cov-report=term-missing --cov-report=xml

    - name: Upload coverage reports
      uses: codecov/codecov-action@v4
      if: always()
      with:
        file: ./coverage.xml
        fail_ci_if_error: false

  test-matrix:
    name: Test on Multiple Python Versions
    runs-on: windows-latest  # Use Windows to avoid apt-get entirely
    needs: lint
    strategy:
      matrix:
        python-version: ['3.9', '3.10', '3.11', '3.12']

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip --no-warn-script-location
        pip install pytest pytest-mock --no-warn-script-location
        pip install -r requirements.txt

    - name: Run unit tests
      run: pytest tests/ -v --tb=short

  code-quality:
    name: Code Quality Checks
    runs-on: windows-latest  # Use Windows to avoid apt-get entirely

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip --no-warn-script-location
        pip install ruff --no-warn-script-location

    - name: Check code quality with ruff
      run: ruff check .

  # Alternative job using container to avoid host package manager
  lint-container:
    name: Lint Code (Container)
    runs-on: ubuntu-latest
    container:
      image: python:3.12-slim  # Use minimal container without apt dependencies
      options: --user root
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install dependencies (pip only)
      run: |
        python -m pip install --upgrade pip --no-cache-dir
        pip install ruff --no-cache-dir

    - name: Check code with ruff
      run: ruff check .

    - name: Check code formatting with ruff
      run: ruff format --check
