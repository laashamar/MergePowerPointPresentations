name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop, tests, "copilot/**" ]
  pull_request:
    branches: [ main, develop, tests ]

jobs:
  lint:
    name: Lint Code
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pylint black isort

    - name: Check code formatting with Black
      run: black --check --line-length=100 *.py

    - name: Check import ordering with isort
      run: isort --check-only --profile black *.py

    - name: Lint with flake8
      run: flake8 *.py --max-line-length=100 --statistics

    - name: Lint with pylint
      run: pylint *.py --max-line-length=100 || true

  test:
    name: Run Tests
    runs-on: ubuntu-latest
    needs: lint

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pytest pytest-cov pytest-mock
        pip install -r requirements.txt || echo "Some dependencies may be Windows-only"

    - name: Run unit tests
      run: pytest tests/ -v --tb=short --cov=. --cov-report=term-missing --cov-report=xml

    - name: Upload coverage reports
      uses: codecov/codecov-action@v4
      if: always()
      with:
        file: ./coverage.xml
        fail_ci_if_error: false

  test-matrix:
    name: Test on Multiple Python Versions
    runs-on: ubuntu-latest
    needs: lint
    strategy:
      matrix:
        python-version: ['3.9', '3.10', '3.11', '3.12']

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pytest pytest-mock
        pip install -r requirements.txt || echo "Some dependencies may be Windows-only"

    - name: Run unit tests
      run: pytest tests/ -v --tb=short

  code-quality:
    name: Code Quality Checks
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8

    - name: Check PEP8 compliance
      run: |
        # Check for PEP8 violations
        flake8 *.py --count --select=E9,F63,F7,F82 --show-source --statistics
        # Exit with warning on other violations
        flake8 *.py --count --exit-zero --max-complexity=10 --max-line-length=100 --statistics
