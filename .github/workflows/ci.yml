# This is the full and correct filename for the GitHub Actions workflow.

name: Python CI/CD Pipeline

on:
  push:
    branches: [ main, develop, tests ]
  pull_request:
    branches: [ main, develop, tests ]

jobs:
  # This job checks for code quality, formatting, and style.
  lint-and-format:
    name: Code Quality Checks
    runs-on: windows-latest

    steps:
    - name: 1. Checkout repository code
      uses: actions/checkout@v4

    - name: 2. Set up Python environment
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'

    - name: 3. Install development dependencies
      run: |
        python -m pip install --upgrade pip
        # Install development dependencies which include linting tools
        pip install -r requirements-dev.txt

    - name: 4. Check code formatting with Black
      # MODIFIED: Check files in both the package and tests directory
      run: black --check --line-length=100 merge_powerpoint/ tests/

    - name: 5. Check import ordering with isort
      # MODIFIED: Check files in both directories
      run: isort --check-only --profile black merge_powerpoint/ tests/

    - name: 6. Lint with flake8
      # MODIFIED: Check files in both directories
      run: flake8 merge_powerpoint/ tests/ --max-line-length=100 --statistics

  # This job runs the actual unit tests using pytest.
  run-tests:
    name: Run Unit Tests
    # This job will only start if the 'lint-and-format' job succeeds.
    needs: lint-and-format
    runs-on: windows-latest

    steps:
    - name: 1. Checkout repository code
      uses: actions/checkout@v4

    - name: 2. Set up Python environment
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'

    - name: 3. Install dependencies
      run: |
        python -m pip install --upgrade pip
        # Install runtime dependencies
        pip install -r requirements.txt
        # Install development dependencies
        pip install -r requirements-dev.txt
        
    - name: 4. Run tests with pytest
      run: |
        # Add the project root to Python path so imports work
        $env:PYTHONPATH = "$env:PYTHONPATH;$pwd"
        pytest tests/ -v
